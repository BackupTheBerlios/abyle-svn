import re
import os
import sys

class abyle_output:
	def __init__(self, source_name, ErrMsg, StdMsg, DefaultMsg, color="default", logfile="/dev/null"):
		self.sourcename = source_name
		self.ErrMsg = ErrMsg
        	self.StdMsg = StdMsg
	        self.DefaultMsg = DefaultMsg
		self.color = color
		self.logfile = logfile
		self.colorcode = self.define_colorcode(self.color)
		try:
			ofile = file(self.logfile,'a')
			if not self.ErrMsg and not self.StdMsg:
				if self.sourcename == "":
					print self.colorcode+self.DefaultMsg
					ofile.write(self.DefaultMsg+"\n")
					os.system("tput sgr0") #set terminalcolor to default
				else:
					print self.colorcode+"MESSAGE from "+self.sourcename+": "+self.DefaultMsg
					ofile.write("MESSAGE from "+self.sourcename+": "+self.DefaultMsg+"\n")
					os.system("tput sgr0") #set terminalcolor to default

			else:
				if self.ErrMsg:
					self.colorcode = "\033[1;31m"
					if type(self.ErrMsg) is list:
						print self.colorcode+"MULTILINE ERROR MESSAGE from "+self.sourcename+":"
						ofile.write("MULTILINE ERROR MESSAGE from "+self.sourcename+":"+"\n")
						for l in self.ErrMsg:
							l = re.sub("\n$","",l)
							print self.colorcode+l
							ofile.write(l+"\n")
						print self.colorcode+"END MULTILINE ERROR MESSAGE"
						ofile.write("END MULTILINE ERROR MESSAGE"+"\n")
						os.system("tput sgr0") #set terminalcolor to default
					else:
						print self.colorcode+"ERROR MESSAGE from "+self.sourcename+": "+str(self.ErrMsg)
						ofile.write("ERROR MESSAGE from "+self.sourcename+": "+str(self.ErrMsg)+"\n")
						os.system("tput sgr0") #set terminalcolor to default
				if StdMsg:
					self.colorcode = "\033[0;00m"
					if type(self.StdMsg) is list:
						print self.colorcode+"MULTILINE MESSAGE from "+self.sourcename+":"
						ofile.write("MULTILINE MESSAGE from "+self.sourcename+":"+"\n")
						for l in self.StdMsg:
							l = re.sub("\n$","",l)
							print self.colorcode+l
							ofile.write(l+"\n")
						print self.colorcode+"END MULTILINE MESSAGE"
						ofile.write("END MULTILINE MESSAGE"+"\n")
						os.system("tput sgr0") #set terminalcolor to default
					else:
						print self.colorcode+"MESSAGE from "+self.sourcename+": "+str(self.StdMsg)
						ofile.write("MESSAGE from "+self.sourcename+": "+str(self.StdMsg)+"\n")
						os.system("tput sgr0") #set terminalcolor to default
			ofile.close()

		except TypeError, v:
			try:
                        	(code, message) = v
                	except:
                        	code = 0
                        	message = v
                	print "TypeError(abyle_output): " + str(message) + " (" + str(code) + ")"
		except IOError, (errno, strerror):
			print "Error create/open logfile - I/O error(%s): %s" % (errno, strerror)

	
	
	def startup(self, msg, color="default"):
		self.msg = msg
		self.color = color

		self.colorcode = self.define_colorcode(color)

		print self.colorcode+msg,
		sys.stdout.flush()
		os.system("tput sgr0") #set terminalcolor to default
	
	def define_colorcode(self, color):
		self.color = color
		
		if self.color == "white":
			self.colorcode = "\033[1;37m"
			return self.colorcode
		if self.color == "green":
			self.colorcode = "\033[1;32m"
			return self.colorcode
		if self.color == "red":
			self.colorcode = "\033[1;31m"
			return self.colorcode
		if self.color == "blue":
			self.colorcode = "\033[1;34m"
			return self.colorcode
		if self.color == "default":
			self.colorcode = "\033[0;00m"
			return self.colorcode
